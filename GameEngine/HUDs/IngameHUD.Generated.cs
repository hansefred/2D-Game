/* Generated by MyraPad at 30.11.2021 20:26:54 */
using Myra;
using Myra.Graphics2D;
using Myra.Graphics2D.TextureAtlases;
using Myra.Graphics2D.UI;
using Myra.Graphics2D.Brushes;
using Myra.Graphics2D.UI.Properties;
using Microsoft.Xna.Framework;
using GameEngine.Model;

#if MONOGAME || FNA
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
#elif STRIDE
using Stride.Core.Mathematics;
#else
using System.Drawing;
using System.Numerics;
#endif

namespace GameEngine.HUDs
{

	partial class IngameHUD: Grid
	{
		#region GameObject 
		private readonly Game1 _game;
		private readonly Player _player;

		#endregion

		#region UIComponent
		private Label _frames;
		private Label _score;
		private Label _time;

		private HorizontalStackPanel _healthBar;
		private TextureRegion _healthTexture;

		#endregion

		public IngameHUD(Game1 game, Player player)
        {
			_game = game;
			_player = player;


		    _healthTexture = MyraEnvironment.DefaultAssetManager.Load<TextureRegion>(@"Content\Life.png");

			BuildUI();
        }

		public void Update (GameTime gametime)
        {
			
			_score.Text = _game.GameData.GetScore().ToString();
			_time.Text = _game.GameData.GetGameTime().ToString(@"hh\:mm\:ss");
			_frames.Text = _game.GameData.GetFramesperSecond().ToString();


			_healthBar.Widgets.Clear();
			for (int i = 0; i <= _player.HitPoint; i++ )
            {
				_healthBar.Widgets.Add(new Image () { MinHeight = 10, MinWidth = 10, MaxHeight = 50, MaxWidth = 50 , Renderable = _healthTexture});

			}
        }

		private void BuildUI()
		{


			var VerticalStackPanel = new VerticalStackPanel();

			//Frames
			_frames = new Label();
			_frames.Text = "0";
			_frames.Background = new SolidBrush(Microsoft.Xna.Framework.Color.Gray);
			var HorizontalStackPanel = new HorizontalStackPanel();
			HorizontalStackPanel.Widgets.Add(new Label() { Text = "Frames: ", Background = new SolidBrush(Microsoft.Xna.Framework.Color.Gray) });
			HorizontalStackPanel.Widgets.Add(_frames);

			//Score
			_score = new Label();
			_score.Text = "0";
			_score.Background = new SolidBrush(Microsoft.Xna.Framework.Color.Gray);
			var HorizontalStackPanel2 = new HorizontalStackPanel();
			HorizontalStackPanel2.Widgets.Add(new Label() { Text = "Score: " , Background  = new SolidBrush(Microsoft.Xna.Framework.Color.Gray)});
			HorizontalStackPanel2.Widgets.Add(_score);

			//Time
			_time = new Label();
			_time.Text = "0";
			_time.Background = new SolidBrush(Microsoft.Xna.Framework.Color.Gray);
			var HorizontalStackPanel1 = new HorizontalStackPanel();
			HorizontalStackPanel1.Widgets.Add(new Label() { Text = "Time: " , Background = new SolidBrush(Microsoft.Xna.Framework.Color.Gray) });
			HorizontalStackPanel1.Widgets.Add(_time);

			VerticalStackPanel.Widgets.Add(HorizontalStackPanel);
			VerticalStackPanel.Widgets.Add(HorizontalStackPanel1);
			VerticalStackPanel.Widgets.Add(HorizontalStackPanel2);




			_healthBar = new HorizontalStackPanel();
			_healthBar.GridRow = 2;



			
			GridLinesColor = ColorStorage.CreateColor(255, 204, 1, 255);
			RowsProportions.Add(new Proportion
			{
				Type = Myra.Graphics2D.UI.ProportionType.Part,
				Value = 5,
			});
			RowsProportions.Add(new Proportion
			{
				Type = Myra.Graphics2D.UI.ProportionType.Part,
				Value = 60,
			});
			RowsProportions.Add(new Proportion
			{
				Type = Myra.Graphics2D.UI.ProportionType.Part,
				Value = 5,
			});
			Widgets.Add(VerticalStackPanel);
			Widgets.Add(_healthBar);
		}

		
	}
}
